From 7425e0ff07faf232bd7b22f86fdfff33ae5392a5 Mon Sep 17 00:00:00 2001
From: Bert van Hall <bert.vanhall@avionic-design.de>
Date: Tue, 13 Dec 2016 00:20:42 +0100
Subject: [PATCH] openssl 1.1.0 compatibility

Signed-off-by: Bert van Hall <bert.vanhall@avionic-design.de>
---
 src/eXtl_dtls.c | 29 ++++++++++++++++++++++++++++-
 src/eXtl_tls.c  | 10 ++++++++--
 2 files changed, 36 insertions(+), 3 deletions(-)

diff --git a/src/eXtl_dtls.c b/src/eXtl_dtls.c
index f45cd1a..cc206c9 100644
--- a/src/eXtl_dtls.c
+++ b/src/eXtl_dtls.c
@@ -233,7 +233,11 @@ shutdown_free_client_dtls (struct eXosip_t *excontext, int pos)
 
       BIO_ctrl (rbio, BIO_CTRL_DGRAM_SET_PEER, 0, (char *) &addr);
 
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+      SSL_set0_rbio(reserved->socket_tab[pos].ssl_conn, rbio);
+#else
       (reserved->socket_tab[pos].ssl_conn)->rbio = rbio;
+#endif
 
       i = SSL_shutdown (reserved->socket_tab[pos].ssl_conn);
 
@@ -588,12 +592,27 @@ dtls_tl_read_message (struct eXosip_t *excontext, fd_set * osip_fdset, fd_set *
       rbio = BIO_new_mem_buf (enc_buf, enc_buf_len);
       BIO_set_mem_eof_return (rbio, -1);
 
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+      SSL_set0_rbio(reserved->socket_tab[pos].ssl_conn, rbio);
+#else
       reserved->socket_tab[pos].ssl_conn->rbio = rbio;
+#endif
 
       i = SSL_read (reserved->socket_tab[pos].ssl_conn, dec_buf, SIP_MESSAGE_MAX_LENGTH);
       /* done with the rbio */
-      BIO_free (reserved->socket_tab[pos].ssl_conn->rbio);
+      BIO *nrbio;
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+      nrbio = SSL_get_rbio(reserved->socket_tab[pos].ssl_conn);
+#else
+      nrbio = reserved->socket_tab[pos].ssl_conn->rbio;
+#endif
+      if (nrbio)
+        BIO_free(nrbio);
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+      SSL_set0_rbio(reserved->socket_tab[pos].ssl_conn, BIO_new(BIO_s_mem()));
+#else
       reserved->socket_tab[pos].ssl_conn->rbio = BIO_new (BIO_s_mem ());
+#endif
 
       if (i > 5) {
         dec_buf[i] = '\0';
@@ -904,7 +923,11 @@ dtls_tl_send_message (struct eXosip_t *excontext, osip_transaction_t * tr, osip_
         _dtls_stream_used = &reserved->socket_tab[pos];
         rbio = BIO_new_dgram (reserved->dtls_socket, BIO_NOCLOSE);
         BIO_ctrl (rbio, BIO_CTRL_DGRAM_SET_PEER, 0, (char *) &addr);
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+        SSL_set0_rbio(reserved->socket_tab[pos].ssl_conn, rbio);
+#else
         reserved->socket_tab[pos].ssl_conn->rbio = rbio;
+#endif
         break;
       }
     }
@@ -918,7 +941,11 @@ dtls_tl_send_message (struct eXosip_t *excontext, osip_transaction_t * tr, osip_
           _dtls_stream_used = &reserved->socket_tab[pos];
           rbio = BIO_new_dgram (reserved->dtls_socket, BIO_NOCLOSE);
           BIO_ctrl (rbio, BIO_CTRL_DGRAM_SET_PEER, 0, (char *) &addr);
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+          SSL_set0_rbio(reserved->socket_tab[pos].ssl_conn, rbio);
+#else
           reserved->socket_tab[pos].ssl_conn->rbio = rbio;
+#endif
           break;
         }
       }
diff --git a/src/eXtl_tls.c b/src/eXtl_tls.c
index 58873e1..dc164b9 100644
--- a/src/eXtl_tls.c
+++ b/src/eXtl_tls.c
@@ -838,7 +838,13 @@ verify_cb (int preverify_ok, X509_STORE_CTX * store)
    * it for something special
    */
   if (!preverify_ok && (err == X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT)) {
-    X509_NAME_oneline (X509_get_issuer_name (store->current_cert), buf, 256);
+    X509 *ccert;
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+    ccert = X509_STORE_CTX_get0_cert(store);
+#else
+    ccert = store->current_cert;
+#endif
+    X509_NAME_oneline (X509_get_issuer_name (ccert), buf, 256);
     OSIP_TRACE (osip_trace (__FILE__, __LINE__, OSIP_ERROR, NULL, "issuer= %s\n", buf));
   }
 
@@ -1155,7 +1161,7 @@ initialize_client_ctx (struct eXosip_t * excontext, const char *certif_client_lo
       }
       else {
         /* this is used to add a trusted certificate */
-        X509_STORE_add_cert (ctx->cert_store, cert);
+        X509_STORE_add_cert (SSL_CTX_get_cert_store(ctx), cert);
       }
       BIO_free (bio);
     }
-- 
2.7.4

