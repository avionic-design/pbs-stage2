From 73c372c8bf1840a473304b8168aa32f21ac2844b Mon Sep 17 00:00:00 2001
From: Thierry Reding <thierry.reding@avionic-design.de>
Date: Mon, 20 Feb 2012 15:38:38 +0100
Subject: [PATCH] Add systemd support.

---
 configure.ac    |   11 +++++++++++
 src/Makefile.am |    6 +++++-
 src/ctl.c       |   38 ++++++++++++++++++++++++++++++++++++++
 3 files changed, 54 insertions(+), 1 deletions(-)

diff --git a/configure.ac b/configure.ac
index 59a5aa4..811a65e 100644
--- a/configure.ac
+++ b/configure.ac
@@ -209,6 +209,16 @@ if test x"$with_xml" = x"yes"; then
    lldp_CHECK_XML2
 fi
 
+AC_ARG_WITH([systemdsystemunitdir],
+  AS_HELP_STRING([--with-systemdsystemunitdir=DIR], [Directory for systemd service files]),
+  [], [with_systemdsystemunitdir=$($PKG_CONFIG --variable=systemdsystemunitdir sytsemd)])
+if test -n "$with_systemdsystemunitdir" -a "x$with_systemdsystemunitdir" != xno; then
+  PKG_CHECK_MODULES([SYSTEMD], libsystemd-daemon)
+  AC_SUBST([systemdsystemunitdir], [$with_systemdsystemunitdir])
+  enable_systemd=yes
+fi
+AM_CONDITIONAL(HAVE_SYSTEMD, [test -n "$with_systemdsystemunitdir" -a "x$with_systemdsystemunitdir" != xno])
+
 # Privsep settings
 lldp_ARG_WITH([privsep-user], [Which user to use for privilege separation], [_lldpd])
 lldp_ARG_WITH([privsep-group], [Which group to use for privilege separation], [_lldpd])
@@ -249,6 +259,7 @@ cat <<EOF
   DOT1...........: $enable_dot1
   DOT3...........: $enable_dot3
   XML output.....: ${with_xml-no}
+  systemd support: ${enable_systemd-no}
 ---------------------------------------------
 
 Check the above options and compile with:
diff --git a/src/Makefile.am b/src/Makefile.am
index f3a8182..a32c5ee 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -2,6 +2,7 @@ sbin_PROGRAMS = lldpd lldpctl
 noinst_LTLIBRARIES = liblldpd.la libcommon.la
 
 ## Shared by all executables
+libcommon_la_CFLAGS =
 libcommon_la_SOURCES = log.c ctl.c lldpd.h lldp.h cdp.h compat.h sonmp.h edp.h
 libcommon_la_LIBADD = @LTLIBOBJS@ 
 
@@ -31,4 +32,7 @@ lldpctl_CFLAGS = @XML2_CFLAGS@
 lldpctl_LDADD  += @XML2_LIBS@
 endif
 
-
+if HAVE_SYSTEMD
+libcommon_la_CFLAGS += -DHAVE_SYSTEMD=1 @SYSTEMD_CFLAGS@
+libcommon_la_LIBADD += @SYSTEMD_LIBS@
+endif
diff --git a/src/ctl.c b/src/ctl.c
index 3bf3803..a7a45e6 100644
--- a/src/ctl.c
+++ b/src/ctl.c
@@ -22,6 +22,12 @@
 #include <sys/socket.h>
 #include <sys/un.h>
 
+#ifdef HAVE_SYSTEMD
+#  include <systemd/sd-daemon.h>
+#  define FALSE 0
+#  define TRUE 1
+#endif
+
 int
 ctl_create(char *name)
 {
@@ -29,6 +35,36 @@ ctl_create(char *name)
 	struct sockaddr_un su;
 	int rc;
 
+#ifdef HAVE_SYSTEMD
+	rc = sd_listen_fds(TRUE);
+	if (rc < 0) {
+		LLOG_WARN("failed to get file descriptors from systemd");
+		errno = -rc;
+		return -1;
+	}
+
+	if (rc > 0) {
+		s = SD_LISTEN_FDS_START;
+
+		rc = sd_is_socket(s, AF_UNSPEC, SOCK_STREAM, 0);
+		if (rc < 0) {
+			close(s);
+			errno = -rc;
+			return -1;
+		}
+
+		rc = listen(s, 5);
+		if (rc < 0) {
+			rc = errno;
+			close(s);
+			errno = rc;
+			return -1;
+		}
+
+		return s;
+	}
+#endif
+
 	if ((s = socket(PF_UNIX, SOCK_STREAM, 0)) == -1)
 		return -1;
 	su.sun_family = AF_UNIX;
@@ -102,8 +138,10 @@ ctl_msg_recv(int fd, struct hmsg *t)
 void
 ctl_cleanup(char *name)
 {
+#ifndef HAVE_SYSTEMD
 	if (unlink(name) == -1)
 		LLOG_WARN("unable to unlink %s", name);
+#endif
 }
 
 /* Packing/unpacking */
-- 
1.7.9.1

