diff --git a/aplay/aplay.c b/aplay/aplay.c
index 88d1ef2..e78ea18 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -581,6 +581,7 @@ int main(int argc, char *argv[])
 	chunk_size = 1024;
 	hwparams = rhwparams;
 
+	printf("allocating audio buffer with 1024 bytes ...\n");
 	audiobuf = (u_char *)malloc(1024);
 	if (audiobuf == NULL) {
 		error(_("not enough memory"));
@@ -980,7 +981,16 @@ static void set_params(void)
 		snd_pcm_hw_params_dump(params, log);
 		exit(EXIT_FAILURE);
 	}
-	snd_pcm_hw_params_get_period_size(params, &chunk_size, 0);
+	err = snd_pcm_hw_params_get_period_size(params, &chunk_size, 0);
+	if (err < 0) {
+		error(_("Can't get period size: %s\n"), snd_strerror(err));
+		snd_pcm_hw_params_dump(params, log);
+		exit(EXIT_FAILURE);
+	}
+	printf("chunk size: %d\n", chunk_size);
+	if (chunk_size == 0)
+		chunk_size = 1024;
+
 	snd_pcm_hw_params_get_buffer_size(params, &buffer_size);
 	if (chunk_size == buffer_size) {
 		error(_("Can't use period equal to buffer size (%lu == %lu)"),
@@ -1023,8 +1033,12 @@ static void set_params(void)
 		snd_pcm_dump(handle, log);
 
 	bits_per_sample = snd_pcm_format_physical_width(hwparams.format);
+	printf("bits per sample: %d\n", bits_per_sample);
 	bits_per_frame = bits_per_sample * hwparams.channels;
+	printf("bits per frame: %d\n", bits_per_frame);
 	chunk_bytes = chunk_size * bits_per_frame / 8;
+	printf("chunk size: %d\n", chunk_size);
+	printf("reallocating audio buffer %p with %d bytes\n", audiobuf, chunk_bytes);
 	audiobuf = realloc(audiobuf, chunk_bytes);
 	if (audiobuf == NULL) {
 		error(_("not enough memory"));
