From 8eb939717398882d41907fd7dd0444f4e108ce13 Mon Sep 17 00:00:00 2001
From: Bert van Hall <bert.vanhall@avionic-design.de>
Date: Thu, 1 Dec 2016 14:45:38 +0100
Subject: [PATCH] openssl 1.1.x compatibility

Signed-off-by: Bert van Hall <bert.vanhall@avionic-design.de>
---
 lib/rsa/rsa-sign.c | 30 +++++++++++++++++++++++++-----
 1 file changed, 25 insertions(+), 5 deletions(-)

diff --git a/lib/rsa/rsa-sign.c b/lib/rsa/rsa-sign.c
index c26f741..d4aeafe 100644
--- a/lib/rsa/rsa-sign.c
+++ b/lib/rsa/rsa-sign.c
@@ -19,6 +19,10 @@
 #define HAVE_ERR_REMOVE_THREAD_STATE
 #endif
 
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#define EVP_MD_CTX_cleanup	EVP_MD_CTX_free
+#endif
+
 static int rsa_err(const char *msg)
 {
 	unsigned long sslErr = ERR_get_error();
@@ -152,11 +156,13 @@ static void rsa_remove(void)
 {
 	CRYPTO_cleanup_all_ex_data();
 	ERR_free_strings();
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 #ifdef HAVE_ERR_REMOVE_THREAD_STATE
 	ERR_remove_thread_state(NULL);
 #else
 	ERR_remove_state(0);
 #endif
+#endif
 	EVP_cleanup();
 }
 
@@ -267,6 +273,7 @@ err_priv:
 static int rsa_get_exponent(RSA *key, uint64_t *e)
 {
 	int ret;
+	const BIGNUM *kex;
 	BIGNUM *bn_te;
 	uint64_t te;
 
@@ -276,17 +283,23 @@ static int rsa_get_exponent(RSA *key, uint64_t *e)
 	if (!e)
 		goto cleanup;
 
-	if (BN_num_bits(key->e) > 64)
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+	RSA_get0_key(key, NULL, &kex, NULL);
+#else
+	kex = key->e;
+#endif
+
+	if (BN_num_bits(kex) > 64)
 		goto cleanup;
 
-	*e = BN_get_word(key->e);
+	*e = BN_get_word(kex);
 
-	if (BN_num_bits(key->e) < 33) {
+	if (BN_num_bits(kex) < 33) {
 		ret = 0;
 		goto cleanup;
 	}
 
-	bn_te = BN_dup(key->e);
+	bn_te = BN_dup(kex);
 	if (!bn_te)
 		goto cleanup;
 
@@ -316,9 +329,16 @@ int rsa_get_params(RSA *key, uint64_t *exponent, uint32_t *n0_invp,
 {
 	BIGNUM *big1, *big2, *big32, *big2_32;
 	BIGNUM *n, *r, *r_squared, *tmp;
+	const BIGNUM *kn;
 	BN_CTX *bn_ctx = BN_CTX_new();
 	int ret = 0;
 
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+	RSA_get0_key(key, &kn, NULL, NULL);
+#else
+	kn = key->n;
+#endif
+
 	/* Initialize BIGNUMs */
 	big1 = BN_new();
 	big2 = BN_new();
@@ -337,7 +357,7 @@ int rsa_get_params(RSA *key, uint64_t *exponent, uint32_t *n0_invp,
 	if (0 != rsa_get_exponent(key, exponent))
 		ret = -1;
 
-	if (!BN_copy(n, key->n) || !BN_set_word(big1, 1L) ||
+	if (!BN_copy(n, kn) || !BN_set_word(big1, 1L) ||
 	    !BN_set_word(big2, 2L) || !BN_set_word(big32, 32L))
 		ret = -1;
 
-- 
2.7.4

