--- a/gettext-tools/src/msgcmp.c	2007-07-09 13:00:02.000000000 +0200
+++ b/gettext-tools/src/msgcmp.c	2007-07-09 13:01:31.000000000 +0200
@@ -48,6 +48,10 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
+
 
 /* Apply the .pot file to each of the domains in the PO file.  */
 static bool multi_domain_mode = false;
--- a/gettext-tools/src/msgfmt.c	2007-07-09 13:05:15.000000000 +0200
+++ b/gettext-tools/src/msgfmt.c	2007-07-09 13:05:41.000000000 +0200
@@ -60,6 +60,10 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
+
 /* Contains exit status for case in which no premature exit occurs.  */
 static int exit_status;
 
--- a/gettext-tools/src/msgmerge.c	2007-07-09 13:10:26.000000000 +0200
+++ b/gettext-tools/src/msgmerge.c	2007-07-09 13:10:49.000000000 +0200
@@ -70,6 +70,9 @@
 #define obstack_chunk_alloc xmalloc
 #define obstack_chunk_free free
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* If true do not print unneeded messages.  */
 static bool quiet;
--- a/gettext-tools/src/msgunfmt.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msgunfmt.c	2007-07-10 15:16:00.000000000 +0200
@@ -50,6 +50,9 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Be more verbose.  */
 bool verbose;
--- a/gettext-tools/src/xgettext.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/xgettext.c	2007-07-10 15:16:00.000000000 +0200
@@ -70,6 +70,9 @@
 /* A convenience macro.  I don't like writing gettext() every time.  */
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 #ifdef __cplusplus
 extern "C" {
--- a/gettext-tools/src/msgattrib.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msgattrib.c	2007-07-10 15:16:00.000000000 +0200
@@ -49,6 +49,9 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Force output of PO file even if empty.  */
 static int force_po;
--- a/gettext-tools/src/msgcat.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msgcat.c	2007-07-10 15:16:00.000000000 +0200
@@ -52,6 +52,9 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Force output of PO file even if empty.  */
 static int force_po;
--- a/gettext-tools/src/msgcomm.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msgcomm.c	2007-07-10 15:16:00.000000000 +0200
@@ -54,6 +54,9 @@
 /* A convenience macro.  I don't like writing gettext() every time.  */
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Force output of PO file even if empty.  */
 static int force_po;
--- a/gettext-tools/src/msgconv.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msgconv.c	2007-07-10 15:16:00.000000000 +0200
@@ -51,6 +51,9 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Force output of PO file even if empty.  */
 static int force_po;
--- a/gettext-tools/src/msgen.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msgen.c	2007-07-10 15:16:00.000000000 +0200
@@ -50,6 +50,9 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Force output of PO file even if empty.  */
 static int force_po;
--- a/gettext-tools/src/msgexec.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msgexec.c	2007-07-10 15:16:00.000000000 +0200
@@ -60,6 +60,9 @@
 # define STDOUT_FILENO 1
 #endif
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Name of the subprogram.  */
 static const char *sub_name;
--- a/gettext-tools/src/msgfilter.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msgfilter.c	2007-07-10 15:16:00.000000000 +0200
@@ -75,6 +75,9 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* We use a child process, and communicate through a bidirectional pipe.
    To avoid deadlocks, let the child process decide when it wants to read
--- a/gettext-tools/src/msggrep.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msggrep.c	2007-07-10 15:16:00.000000000 +0200
@@ -65,6 +65,9 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Force output of PO file even if empty.  */
 static int force_po;
--- a/gettext-tools/src/msginit.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msginit.c	2007-07-10 15:16:00.000000000 +0200
@@ -98,6 +98,10 @@
 
 #define SIZEOF(a) (sizeof(a) / sizeof(a[0]))
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
+
 extern const char * _nl_locale_name (int category, const char *categoryname);
 extern const char * _nl_expand_alias (const char *name);

--- a/gettext-tools/src/msguniq.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/msguniq.c	2007-07-10 15:16:00.000000000 +0200
@@ -51,6 +51,9 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Force output of PO file even if empty.  */
 static int force_po;
--- a/gettext-tools/src/hostname.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/hostname.c	2007-07-10 15:16:00.000000000 +0200
@@ -92,6 +92,9 @@
 
 #define _(str) gettext (str)
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Output format.  */
 static enum { default_format, short_format, long_format, ip_format } format;
--- a/gettext-tools/src/urlget.c	2007-07-10 15:12:33.000000000 +0200
+++ b/gettext-tools/src/urlget.c	2007-07-10 15:16:00.000000000 +0200
@@ -50,6 +50,9 @@
 # define STDOUT_FILENO 1
 #endif
 
+#ifdef __UCLIBC__
+void (*error_print_progname)(void);
+#endif
 
 /* Only high-level toolkits, written in languages with exception handling,
    have an URL datatype and operations to fetch an URL's contents.  Such
