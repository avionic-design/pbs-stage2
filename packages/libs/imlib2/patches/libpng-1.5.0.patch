diff --git a/src/modules/loaders/loader_png.c b/src/modules/loaders/loader_png.c
index 2941f40..600565c 100644
--- a/src/modules/loaders/loader_png.c
+++ b/src/modules/loaders/loader_png.c
@@ -58,7 +58,7 @@ load(ImlibImage * im, ImlibProgressFunction progress,
              fclose(f);
              return 0;
           }
-        if (setjmp(png_ptr->jmpbuf))
+        if (setjmp(png_jmpbuf(png_ptr)))
           {
              png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
              fclose(f);
@@ -245,6 +245,7 @@ save(ImlibImage * im, ImlibProgressFunction progress, char progress_granularity)
    char                pper = 0;
    ImlibImageTag      *tag;
    int                 quality = 75, compression = 3, num_passes = 1, pass;
+   int                 interlace_type = PNG_INTERLACE_NONE;
 
    if (!im->data)
       return 0;
@@ -265,7 +266,7 @@ save(ImlibImage * im, ImlibProgressFunction progress, char progress_granularity)
         png_destroy_write_struct(&png_ptr, (png_infopp) NULL);
         return 0;
      }
-   if (setjmp(png_ptr->jmpbuf))
+   if (setjmp(png_jmpbuf(png_ptr)))
      {
         fclose(f);
         png_destroy_write_struct(&png_ptr, (png_infopp) & info_ptr);
@@ -277,8 +278,8 @@ save(ImlibImage * im, ImlibProgressFunction progress, char progress_granularity)
    if ((tag = __imlib_GetTag(im, "interlacing")) && tag->val)
      {
 #ifdef PNG_WRITE_INTERLACING_SUPPORTED
-          png_ptr->interlaced = PNG_INTERLACE_ADAM7;
           num_passes = png_set_interlace_handling(png_ptr);
+          interlace_type = PNG_INTERLACE_ADAM7;
 #endif
      }
 
@@ -286,7 +287,7 @@ save(ImlibImage * im, ImlibProgressFunction progress, char progress_granularity)
    if (im->flags & F_HAS_ALPHA)
      {
         png_set_IHDR(png_ptr, info_ptr, im->w, im->h, 8,
-                     PNG_COLOR_TYPE_RGB_ALPHA, png_ptr->interlaced,
+                     PNG_COLOR_TYPE_RGB_ALPHA, interlace_type,
                      PNG_COMPRESSION_TYPE_BASE, PNG_FILTER_TYPE_BASE);
 #ifdef WORDS_BIGENDIAN
         png_set_swap_alpha(png_ptr);
@@ -297,7 +298,7 @@ save(ImlibImage * im, ImlibProgressFunction progress, char progress_granularity)
    else
      {
         png_set_IHDR(png_ptr, info_ptr, im->w, im->h, 8, PNG_COLOR_TYPE_RGB,
-                     png_ptr->interlaced, PNG_COMPRESSION_TYPE_BASE,
+                     interlace_type, PNG_COMPRESSION_TYPE_BASE,
                      PNG_FILTER_TYPE_BASE);
         data = malloc(im->w * 3 * sizeof(char));
      }
