--- Linux-PAM-1.1.4/modules/pam_group/pam_group.c	2011-07-20 12:34:40.134399247 -0400
+++ Linux-PAM-1.1.4/modules/pam_group/pam_group.c	2011-07-20 12:35:53.204399448 -0400
@@ -654,11 +654,15 @@
 		       "%s: malformed rule #%d", PAM_GROUP_CONF, count);
 	    continue;
 	}
+#ifdef HAVE_INNETGR
 	/* If buffer starts with @, we are using netgroups */
 	if (buffer[0] == '@')
 	  good &= innetgr (&buffer[1], NULL, user, NULL);
 	/* otherwise, if the buffer starts with %, it's a UNIX group */
 	else if (buffer[0] == '%')
+#else
+	if (buffer[0] == '%')
+#endif
           good &= pam_modutil_user_in_group_nam_nam(pamh, user, &buffer[1]);
 	else
 	  good &= logic_field(pamh,user, buffer, count, is_same);
--- Linux-PAM-1.1.4/modules/pam_time/pam_time.c	2011-07-20 12:39:58.284399192 -0400
+++ Linux-PAM-1.1.4/modules/pam_time/pam_time.c	2011-07-20 12:39:51.883148812 -0400
@@ -553,10 +553,12 @@
 			  "%s: malformed rule #%d", PAM_TIME_CONF, count);
 	       continue;
 	  }
+#ifdef HAVE_INNETGR
 	  /* If buffer starts with @, we are using netgroups */
 	  if (buffer[0] == '@')
 	    good &= innetgr (&buffer[1], NULL, user, NULL);
 	  else
+#endif
 	    good &= logic_field(pamh, user, buffer, count, is_same);
 	  D(("with user: %s", good ? "passes":"fails" ));
 
--- Linux-PAM-1.1.4/modules/pam_succeed_if/pam_succeed_if.c	2011-07-20 12:41:57.084399074 -0400
+++ Linux-PAM-1.1.4/modules/pam_succeed_if/pam_succeed_if.c	2011-07-20 12:41:43.604399331 -0400
@@ -233,16 +233,20 @@
 static int
 evaluate_innetgr(const char *host, const char *user, const char *group)
 {
+#ifdef HAVE_INNETGR
 	if (innetgr(group, host, user, NULL) == 1)
 		return PAM_SUCCESS;
+#endif
 	return PAM_AUTH_ERR;
 }
 /* Return PAM_SUCCESS if the (host,user) is NOT in the netgroup. */
 static int
 evaluate_notinnetgr(const char *host, const char *user, const char *group)
 {
+#ifdef HAVE_INNETGR
 	if (innetgr(group, host, user, NULL) == 0)
 		return PAM_SUCCESS;
+#endif
 	return PAM_AUTH_ERR;
 }
 
@@ -356,6 +360,7 @@
 	if (strcasecmp(qual, "notingroup") == 0) {
 		return evaluate_notingroup(pamh, user, right);
 	}
+#ifdef HAVE_INNETGR
 	/* (Rhost, user) is in this netgroup. */
 	if (strcasecmp(qual, "innetgr") == 0) {
 		const void *rhost;
@@ -370,6 +375,7 @@
 			rhost = NULL;
 		return evaluate_notinnetgr(rhost, user, right);
 	}
+#endif
 	/* Fail closed. */
 	return PAM_SERVICE_ERR;
 }
