#!/bin/sh

PATH=/sbin:/bin:/usr/bin:/usr/sbin
export PATH

. /scripts/functions

echo "Loading, please wait ..."

# create needed directories
[ -d /dev  ] || mkdir -m 0755 /dev
[ -d /root ] || mkdir -m 0700 /root
[ -d /sys  ] || mkdir         /sys
[ -d /proc ] || mkdir         /proc
[ -d /tmp  ] || mkdir         /tmp

mkdir -p /var/lock

# mount virtual filesystems
log_begin_msg "Mounting virtual filesystems"
mount -o nodev,noexec,nosuid -t sysfs none /sys
mount -o nodev,noexec,nosuid -t proc  none /proc
log_end_msg

# create needed devices
log_begin_msg "Creating devices"
[ -e /dev/console ] || mknod /dev/console c 5 1
[ -e /dev/null    ] || mknod /dev/null    c 1 3
[ -e /dev/loop0   ] || mknod /dev/loop0   b 7 0
log_end_msg

rootmnt=/root
init=/sbin/init

log_begin_msg "Running top scripts"
run_scripts /scripts/init-top
log_end_msg

log_begin_msg "Running premount scripts"
run_scripts /scripts/init-premount
log_end_msg

# mount target root filesystem
log_begin_msg "Mounting root filesystem: ${rootmnt}"
mkdir -p /media/sd-card
mount /dev/mmcblk0 /media/sd-card
mount -o loop /media/sd-card/rootfs.img ${rootmnt}
log_end_msg

# create devices in the new root filesystem
log_begin_msg "Creating devices"
[ -e ${rootmnt}/dev/console ] || mknod ${rootmnt}/dev/console c 5 1
log_end_msg

# finishing bootstrapping
if [ -d ${rootmnt}/debootstrap ]; then
	log_begin_msg "Finishing bootstrap process"
	chroot ${rootmnt} /debootstrap/debootstrap --second-stage
	log_end_msg
fi

#log_begin_msg "Running shell in new root filesystem"
#chroot ${rootmnt} /bin/sh
#log_end_msg

#log_begin_msg "Generating ld.so cache"
#${rootmnt}/sbin/ldconfig -r ${rootmnt}
#log_end_msg

# move virtual filesystems over to the real filesystem
mount -o move /sys  ${rootmnt}/sys
mount -o move /proc ${rootmnt}/proc

# check for init in target filesystem
while [ ! -x ${rootmnt}${init} ]; do
	panic "Target filesystem doesn't have ${init}"
done

# kill all running udevd instances because the new root will start the final
# udevd
killall udevd

#exec switch_root -c ${rootmnt}/dev/console ${rootmnt} ${init} "$@"
exec switch_root ${rootmnt} ${init} "$@"

