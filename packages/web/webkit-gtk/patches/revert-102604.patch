From 14daf73a780fe6a44826beb20ce6bfaeb3f21ada Mon Sep 17 00:00:00 2001
From: Thierry Reding <thierry.reding@avionic-design.de>
Date: Wed, 26 Sep 2012 15:12:29 +0200
Subject: [PATCH] Revert 102604 ([GTK] gtk_widget_size_allocate for plugin
 widgets should happen in the WebView size-allocate method)

---
 Source/WebCore/plugins/gtk/PluginViewGtk.cpp         | 13 ++++++++-----
 Source/WebKit/gtk/WebCoreSupport/ChromeClientGtk.cpp |  9 ---------
 Source/WebKit/gtk/webkit/webkitwebview.cpp           | 16 ----------------
 3 files changed, 8 insertions(+), 30 deletions(-)

diff --git a/Source/WebCore/plugins/gtk/PluginViewGtk.cpp b/Source/WebCore/plugins/gtk/PluginViewGtk.cpp
index 4006040..670a2aa 100644
--- a/Source/WebCore/plugins/gtk/PluginViewGtk.cpp
+++ b/Source/WebCore/plugins/gtk/PluginViewGtk.cpp
@@ -556,14 +556,17 @@ void PluginView::updateWidgetAllocationAndClip()
 #endif
     }
 
-    // The goal is to try to avoid calling gtk_widget_size_allocate in the WebView's
-    // size-allocate method. It blocks the main loop and if the widget is offscreen
-    // or hasn't moved it isn't required.
+    GtkAllocation allocation(m_delayedAllocation);
+    m_delayedAllocation = IntRect();
+
+    // The goal is to avoid calling gtk_widget_size_allocate when necessary.
+    // It blocks the main loop and if the widget is offscreen or hasn't moved
+    // it isn't required.
 
     // Don't do anything if the allocation has not changed.
     GtkAllocation currentAllocation;
     gtk_widget_get_allocation(widget, &currentAllocation);
-    if (currentAllocation == m_delayedAllocation)
+    if (currentAllocation == allocation)
         return;
 
     // Don't do anything if both the old and the new allocations are outside the frame.
@@ -572,7 +575,7 @@ void PluginView::updateWidgetAllocationAndClip()
     if (currentAllocationRect.isEmpty() && m_clipRect.isEmpty())
         return;
 
-    g_object_set_data(G_OBJECT(widget), "delayed-allocation", &m_delayedAllocation);
+    gtk_widget_size_allocate(widget, &allocation);
 }
 
 void PluginView::setParentVisible(bool visible)
diff --git a/Source/WebKit/gtk/WebCoreSupport/ChromeClientGtk.cpp b/Source/WebKit/gtk/WebCoreSupport/ChromeClientGtk.cpp
index 3523fa7..f029821 100644
--- a/Source/WebKit/gtk/WebCoreSupport/ChromeClientGtk.cpp
+++ b/Source/WebKit/gtk/WebCoreSupport/ChromeClientGtk.cpp
@@ -572,15 +572,6 @@ void ChromeClient::paint(WebCore::Timer<ChromeClient>*)
     performAllPendingScrolls();
     paintWebView(m_webView, frame, m_dirtyRegion);
 
-    HashSet<GtkWidget*> children = m_webView->priv->children;
-    HashSet<GtkWidget*>::const_iterator end = children.end();
-    for (HashSet<GtkWidget*>::const_iterator current = children.begin(); current != end; ++current) {
-        if (static_cast<GtkAllocation*>(g_object_get_data(G_OBJECT(*current), "delayed-allocation"))) {
-            gtk_widget_queue_resize_no_redraw(GTK_WIDGET(m_webView));
-            break;
-        }
-    }
-
     const IntRect& rect = m_dirtyRegion.bounds();
     gtk_widget_queue_draw_area(GTK_WIDGET(m_webView), rect.x(), rect.y(), rect.width(), rect.height());
 
diff --git a/Source/WebKit/gtk/webkit/webkitwebview.cpp b/Source/WebKit/gtk/webkit/webkitwebview.cpp
index 608bfc2..33bfa94 100644
--- a/Source/WebKit/gtk/webkit/webkitwebview.cpp
+++ b/Source/WebKit/gtk/webkit/webkitwebview.cpp
@@ -849,20 +849,6 @@ static void webkit_web_view_get_preferred_height(GtkWidget* widget, gint* minimu
 }
 #endif
 
-static void updateChildAllocationFromPendingAllocation(GtkWidget* child, void*)
-{
-    if (!gtk_widget_get_visible(child))
-        return;
-
-    GtkAllocation* allocation = static_cast<GtkAllocation*>(g_object_get_data(G_OBJECT(child), "delayed-allocation"));
-    if (!allocation)
-        return;
-
-    g_object_set_data(G_OBJECT(child), "delayed-allocation", 0);
-    gtk_widget_size_allocate(child, allocation);
-    *allocation = IntRect();
-}
-
 static void resizeWebViewFromAllocation(WebKitWebView* webView, GtkAllocation* allocation)
 {
     Page* page = core(webView);
@@ -872,8 +858,6 @@ static void resizeWebViewFromAllocation(WebKitWebView* webView, GtkAllocation* a
         frameView->resize(allocation->width, allocation->height);
     }
 
-    gtk_container_forall(GTK_CONTAINER(webView), updateChildAllocationFromPendingAllocation, 0);
-
     WebKit::ChromeClient* chromeClient = static_cast<WebKit::ChromeClient*>(page->chrome()->client());
     chromeClient->widgetSizeChanged(oldSize, IntSize(allocation->width, allocation->height));
     chromeClient->adjustmentWatcher()->updateAdjustmentsFromScrollbars();
-- 
1.7.12.1

