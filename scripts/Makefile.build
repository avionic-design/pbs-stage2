src = $(obj)

PHONY := __build
__build:

obj-y :=

ifeq ($(findstring package, $(MAKECMDGOALS)),)
  include $(objtree)/include/config/auto.conf

  # get rid of quotes
  ARCH := $(shell echo $(CONFIG_ARCH))

  include arch/$(ARCH)/Makefile
endif

#-include include/config/auto.conf
include scripts/Kbuild.include
include scripts/Makefile.lib

ifneq ($(wildcard .package),)
include .package
endif

kbuild-dir := $(if $(filter /%,$(src)),$(src),$(srctree)/$(src))
kbuild-file := $(if $(wildcard $(kbuild-dir)/Kbuild),$(kbuild-dir)/Kbuild,$(kbuild-dir)/Makefile)
include $(kbuild-file)

depends-file = $(objtree)/.depends
packages-y = $(shell cat $(depends-file) | grep '^CONFIG_PACKAGE_' | xargs echo)
platform-y = $(shell cat $(depends-file) | grep '^CONFIG_PLATFORM' | xargs echo)
build-targets = $(packages-y)

PHONY += $(packages-y)
ifeq ($(obj),packages)
$(packages-y): category = $(shell echo $@ | cut -d_ -f3 | tr '[A-Z]' '[a-z]')
$(packages-y):
	@echo $@ > .package
	$(Q)$(MAKE) $(build)=$(obj)/$(category) package
	@rm .package
endif

ifneq ($(platform-y),)
build-targets += platforms

PHONY += platforms
platforms:
	@cat $(depends-file) | grep '^CONFIG_PLATFORM_' > .package
	$(Q)$(MAKE) $(build)=$(obj) package
	@rm .package
endif

dirs := $(filter %/,$(obj-y))
dirs := $(addprefix $(obj)/, $(dirs))

pkgs := $(filter-out %/,$(obj-y))
pkgs := $(addprefix $(obj)/, $(pkgs))

build-dirs := $(addprefix build-,$(dirs))
build-pkgs := $(addprefix build-,$(pkgs))

build-targets += $(build-dirs)

PHONY += $(build-dirs)
$(build-dirs): build-%:
	$(Q)$(MAKE) $(build)=$* package

PHONY += $(build-pkgs)
$(build-pkgs): build-%:
	$(Q)$(MAKE) $(package)=$*

PHONY += package
package: $(build-dirs) $(build-pkgs)
	@:

__build: $(build-targets)
	@:

PHONY += FORCE
FORCE:

.PHONY: $(PHONY)
