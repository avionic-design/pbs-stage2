ifneq ($(shell id -u),0)
$(error "This target requires (fake)root permissions!")
endif

src := $(obj)

PHONY := all
all:

include autoconf.mk
include include/config/auto.conf
include include/config/depends-dirs.mk
include scripts/Kbuild.include
include scripts/Makefile.lib

export PATH:=$(objtree)/build-tools/bin:$(PATH)

BUILD_DIR=$(obj)
ROOTFS_BUILD_DIR=$(BUILD_DIR)/rootfs
DEBUGFS_BUILD_DIR=$(BUILD_DIR)/debugfs

include $(if $(KBUILD_SRC),$(srctree)/arch/$(call unquote,$(CONFIG_ARCH))/Makefile)

BUILD_ROOTFS = y
BUILD_DEBUGFS = n

targets-$(BUILD_ROOTFS) += $(obj)/rootfs.img
targets-$(BUILD_DEBUGFS) += $(obj)/debugfs.img

packages := $(addprefix install-,$(depends-dirs))

quiet_cmd_install_package =
      cmd_install_package = $(MAKE) $(binary)=$* rootfs=$(ROOTFS_BUILD_DIR) priv=

$(packages): install-%:
	+$(call cmd,install_package)

dbg-packages := $(addprefix dbg-install-,$(depends-dirs))

quiet_cmd_install_dbg_package =
      cmd_install_dbg_package = $(MAKE) $(binary)=$* rootfs=$(DEBUGFS_BUILD_DIR) priv= include-packages=%-dbg exclude-packages=

$(dbg-packages): dbg-install-%:
	+$(call cmd,install_dbg_package)

quiet_cmd_delete = DELETE  $*
      cmd_delete = rm -f $*

rm-$(obj)/rootfs.img: rm-%:
	$(call cmd,delete)

DEPMOD ?= depmod

quiet_cmd_depmod = DEPMOD  $(KERNEL_VERSION)
      cmd_depmod = $(DEPMOD) -b $@ $(KERNEL_VERSION)

include $(objtree)/build/packages/kernel/linux/kernel-version

$(ROOTFS_BUILD_DIR): KERNEL_VERSION = $(VERSION)
$(ROOTFS_BUILD_DIR): %: $(packages) FORCE
	$(call cmd,depmod)

$(DEBUGFS_BUILD_DIR): %: $(dbg-packages) FORCE

MKSQUASHFS ?= mksquashfs

quiet_cmd_mksquashfs = SQUASHFS $@
      cmd_mksquashfs = $(MKSQUASHFS) $(fsroot) $@ -noappend

quiet_cmd_rm_rootfs = RM      $<
      cmd_rm_rootfs = rm -rf $<

%.img:
	$(call cmd,mksquashfs)
	$(call cmd,rm_rootfs)

$(obj)/rootfs.img: fsroot=$<
$(obj)/rootfs.img: $(ROOTFS_BUILD_DIR) FORCE

$(obj)/debugfs.img: fsroot=$</debug
$(obj)/debugfs.img: $(DEBUGFS_BUILD_DIR) FORCE

all: $(targets-y)

PHONY += FORCE
FORCE: ;

.PHONY: $(PHONY)
