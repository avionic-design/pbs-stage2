KVER = $(shell cat $(obj)/kernel-version)
KREL = $(shell cat $(obj)/kernel-release)
priv = sudo

INITRD_FILTER = \
	-not -path '*/include*' \
	-not -path '*$(prefix)/share/man*' \
	-not -name '*.a'

$(obj)/initrd.img: $(obj)/rootfs FORCE
	@echo '  CPIO      $@'
	@(cd $< && find $(INITRD_FILTER) | $(priv) xargs chown -h root:root)
	@(cd $< && find $(INITRD_FILTER) | cpio -o -H newc --quiet) > $@

$(obj)/initrd.gz: $(obj)/initrd.img
	@echo '  GZIP      $@'
	@gzip -c $< > $@

PHONY += u-boot.img
u-boot.img: $(obj)/u-boot.img

PHONY += u-boot.fit
u-boot.fit: $(obj)/u-boot.fit

# TODO: move this somewhere else
MKIMAGE = mkimage
LOAD_ADDR = 0xA0008000
EXEC_ADDR = 0xA0008000

concat = $(shell echo $(filter-out FORCE, $(2)) | tr ' ' $(1))

quiet_cmd_mk_uboot_img = MKIMAGE   $@
      cmd_mk_uboot_img = $(MKIMAGE) -A $(ARCH) -O linux -T multi -C none \
			 	-a $(LOAD_ADDR) -e $(EXEC_ADDR) \
				-d $(call concat, :, $^) $@ \
				> /dev/null 2>&1

quiet_cmd_mk_uboot_fit = MKIMAGE   $@
      cmd_mk_uboot_fit = $(MKIMAGE) -f $(obj)/multi.its $@ \
			 	> /dev/null 2>&1

$(obj)/u-boot.img: $(obj)/vmlinuz-$(KREL) $(obj)/initrd.gz
	$(call cmd,mk_uboot_img)

$(obj)/multi.its: $(obj)/multi.its.in $(obj)/kernel-version
	$(Q)sed -e 's/@KVER@/$(KVER)/g' $< > $@
	$(if $(Q),$(Q)echo '  GEN       $@')

$(obj)/u-boot.fit: $(obj)/vmlinuz-$(KREL) $(obj)/initrd.gz $(obj)/multi.its
	$(call cmd,mk_uboot_fit)

_all: $(obj)/u-boot.img $(obj)/u-boot.fit
	@:

