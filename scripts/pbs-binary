#!/bin/sh

quiet=no

log()
{
	if test "x$quiet" = "xno"; then
		echo "$@"
	fi
}

for arg in $@; do
	if [ "x$prev" != "x" ]; then
		if [ "x${arg#-}" = "x$arg" ]; then
			eval $prev=$arg
			prev=
			shift; continue
		else
			echo "WARNING: missing argument for parameter: $opt"
		fi
	fi

	opt=$arg

	case $arg in
		-q | --quiet)
			quiet=yes
			shift
			;;

		-t | --target)
			prev=target
			shift
			;;

		-v | --version)
			prev=version
			shift
			;;

		-b | --binary)
			prev=binary
			shift
			;;

		*)
			packages="$@"
			break
			;;
	esac
done

if [ "x$prev" != "x" ]; then
	echo "WARNING: missing argument for parameter: $opt"
fi

if [ "x$target" = "x" ]; then
	echo "ERROR: no target configuration specified - try using -t TARGET"
	exit 1
fi

if [ "x$version" = "x" ]; then
	echo "ERROR: no package version specified - try using -v PATH"
	exit 1
fi

if [ "x$binary" = "x" ]; then
	echo "ERROR: no binary directory specified - try using -b PATH"
	exit 1
fi

if [ "x$packages" = "x" ]; then
	echo "ERROR: no package definition specified"
	exit 1
fi

srcdir="${binary}/install"

for package in $packages; do
	package="${package##*/}"
	tarball="${package}_${version}_${target}.tar.bz2"

	if [ -x "$srcdir/$package/DEBIAN/hooks/binary" ]; then
		"$srcdir/$package/DEBIAN/hooks/binary" \
			"$srcdir/$package" "$version" || exit $?
	fi

	log -n "Building binary package: $tarball ... "
	tar cjpf "$binary/$tarball" -C "$srcdir/$package" .
	log "done"
done
