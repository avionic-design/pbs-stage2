src := $(obj)

PHONY := all
all:

-include include/config/auto.conf
include scripts/Kbuild.include
include scripts/Makefile.lib

kbuild-dir := $(if $(filter /%,$(src)),$(src),$(srctree)/$(src))
kbuild-file := $(if $(wildcard $(kbuild-dir)/Kbuild),$(kbuild-dir)/Kbuild,$(kbuild-dir)/Makefile)
include $(kbuild-file)

all: uscan
	@:

uscan-dirs := $(addprefix uscan-$(obj)/,$(filter %/,$(obj-y)))
uscan-pkgs := $(addprefix uscan-$(obj)/,$(filter-out %/,$(obj-y)))

package = $(obj)

uscan-args = \
	--package $(PACKAGE) \
	--upstream-version $(VERSION) \
	--watchfile $(srctree)/$(obj)/watch \
	--no-download

run-uscan = $(srctree)/scripts/uscan.helper $(uscan-args)

cmd-uscan = \
	@version=`$(run-uscan)`; ec=$$?; \
	if [ -n "$$version" ]; then \
		echo "new version available: $(obj) (current: $(VERSION), new: $$version)"; \
	else \
		echo "package is up-to-date: $(obj)"; \
	fi

err-uscan = \
	@echo "no watchfile for package: $(obj)"

PHONY += $(uscan-dirs)
$(uscan-dirs): uscan-%: %
	$(Q)$(MAKE) $(uscan)=$*

PHONY += $(uscan-pkgs)
$(uscan-pkgs): uscan-%:
	$(Q)$(MAKE) $(uscan)=$*

uscan: $(uscan-dirs) $(uscan-pkgs)
ifdef PACKAGE
	$(if $(wildcard $(srctree)/$(obj)/watch), \
		$(call cmd-uscan), \
		$(call err-uscan))
endif
	@:

PHONY += FORCE
FORCE:
	@:

.PHONY: $(PHONY)
