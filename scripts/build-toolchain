#!/bin/sh

pkglist="make target=\$toolchain mode=list toolchain | sort -u"
version="cut -d: -f1 | cut -d' ' -f2"
tcroot="`pwd`/toolchains"
date="date +%X"
ret=0

die()
{
	if [ "x$command" = "xclean" ]; then
		exit $1
	fi

	if [ "x$1" != "x0" ]; then
		echo "[`eval $date`] failed"
		exit $1
	else
		echo "[`eval $date`] done"
	fi
}

log_begin_msg()
{
	echo "$@"
}

log_end_msg()
{
	if [ "x$1" != "x0" ]; then
		echo "failed ($1)"
		die $1
	else
		echo "done"
	fi
}

toolchain_version()
{
	toolchain=$1
	libc=$2

	case $libc in
	gnu)
		libc=glibc
		;;

	uclibc)
		libc=uClibc
		;;

	*)
		libc=
		;;
	esac

	binutils="`eval $pkglist | grep binutils | eval $version`"
	gcc="_`eval $pkglist | grep gcc | eval $version`"
	linux="_`eval $pkglist | grep linux | eval $version`"

	if [ "x$libc" != "x" ]; then
		libc="_`eval $pkglist | grep $libc | eval $version`"
	else
		libc=""
	fi

	version="${binutils}${gcc}${linux}${libc}"
	echo $version
	return 0
}

if [ "x$1" = "x" ]; then
	echo "usage: $0 toolchain [clean]"
	exit 1
fi

toolchain="$1"
command="$2"
arch=`echo $toolchain | cut -d- -f1`
cpu=`echo $toolchain | cut -d- -f2`
os=`echo $toolchain | cut -d- -f3`
libc=`echo $toolchain | cut -d- -f4`

if [ "x$libc" = "x" ]; then
	libc=$os
	os=$cpu
	cpu=
fi

abi=`echo $libc | sed -e s/uclibc//g -e s/gnu//g`
libc=`echo $libc | sed -e s/uclibc.*/uclibc/ -e s/gnu.*/gnu/g`

if [ ! -d "$tcroot/$toolchain" ]; then
	echo "$toolchain: no such toolchain"
	exit 1
fi

if [ "x$command" = "xclean" ]; then
	log_begin_msg -n "[`eval $date`] Removing $toolchain toolchain ... "
	make target=$toolchain mode=clean toolchain > /dev/null 2>&1
	ret=$?
	log_end_msg $ret
else
	echo "[`eval $date`] Building $toolchain toolchain ... "

	version=`toolchain_version $toolchain $libc`

	log_begin_msg -n "[`eval $date`]   Building toolchain ... "
	CROSS_COMPILE="${arch}-${os}-gnu${abi}-" \
		time make target=$toolchain toolchain > logs/$toolchain.log 2>&1
	ret=$?
	log_end_msg $ret

	log_begin_msg -n "[`eval $date`]   Archiving toolchain ... "
	mkdir -p "$tcroot/archive"
	tar cjf "$tcroot/archive/${toolchain}_${version}.tar.bz2" \
		-C "$tcroot/$toolchain" opt
	ret=$?
	log_end_msg $ret

	log_begin_msg -n "[`eval $date`]   Cleaning up toolchain ... "
	make target=$toolchain mode=clean toolchain > /dev/null 2>&1
	ret=$?
	log_end_msg $ret

	log_begin_msg -n "[`eval $date`]   Installing toolchain ... "
	tar xjf "$tcroot/archive/${toolchain}_${version}.tar.bz2" \
		-C "$tcroot/${toolchain}"
	ret=$?
	log_end_msg $ret

	die 0
fi
