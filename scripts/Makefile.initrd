src := $(obj)

PHONY := all
all:

include include/config/auto.conf
include include/config/depends-dirs.conf
include scripts/Kbuild.include
include scripts/Makefile.lib

ifeq ($(CONFIG_ARCH),arm)
  CONFIG_ARCH_HAS_UBOOT = y
endif

targets-y := $(obj)/initrd.gz
targets-$(CONFIG_ARCH_HAS_UBOOT) += $(obj)/u-boot.img
targets-$(CONFIG_ARCH_HAS_UBOOT) += $(obj)/u-boot.fit

packages := $(addprefix install-,$(depends-dirs))

quiet_cmd_install_package =
      cmd_install_package = $(MAKE) $(binary)=$* rootfs=$(objtree)/initrd

$(packages): install-%:
	$(call cmd,install_package)

quiet_cmd_mount_ramdisk = MOUNT   $*
      cmd_mount_ramdisk = mkdir -p $* && mount -t tmpfs none $*

mount-$(obj)/initrd: mount-%:
	$(call cmd,mount_ramdisk)

quiet_cmd_depmod = DEPMOD  $(KERNEL_VERSION)
      cmd_depmod = /sbin/depmod -b $@ $(KERNEL_VERSION)

include $(objtree)/build/packages/kernel/linux.git/kernel-release

$(obj)/initrd: KERNEL_VERSION = $(VERSION)
$(obj)/initrd: %: mount-% $(packages) FORCE
	$(call cmd,depmod)

quiet_cmd_initrd = CPIO    $@
      cmd_initrd = cd $< && find | cpio -H newc --quiet -o > $@

quiet_cmd_umount_ramdisk = UMOUNT  $<
      cmd_umount_ramdisk = umount $< && rmdir $<

$(obj)/initrd.img: $(obj)/initrd FORCE
	$(call cmd,initrd)
	$(call cmd,umount_ramdisk)

quiet_cmd_gzip = GZIP    $@
      cmd_gzip = gzip -c $< > $@

$(obj)/initrd.gz: $(obj)/initrd.img
	$(call cmd,gzip)

all: $(targets-y)
	@:

PHONY += FORCE
FORCE: ;

.PHONY: $(PHONY)
