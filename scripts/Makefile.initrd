src := $(obj)

PHONY := all
all:

include autoconf.mk
include include/config/auto.conf
include include/config/depends-dirs.mk
include scripts/Kbuild.include
include scripts/Makefile.lib

KERNEL_DTB = $(call unquote,$(CONFIG_PACKAGE_KERNEL_LINUX_DTB))

targets-y := $(obj)/initrd.gz
targets-$(CONFIG_ARCH_HAS_UBOOT) += $(obj)/uImage

packages := $(addprefix install-,$(depends-dirs))

quiet_cmd_install_package =
      cmd_install_package = $(MAKE) $(binary)=$* rootfs=$(objtree)/initrd

$(packages): install-%:
	$(call cmd,install_package)

quiet_cmd_mount_ramdisk = MOUNT   $*
      cmd_mount_ramdisk = mkdir -p $* && mount -t tmpfs tmpfs $*

mount-$(obj)/initrd: mount-%:
	$(call cmd,mount_ramdisk)

DEPMOD ?= $(objtree)/build-tools/bin/depmod

quiet_cmd_depmod = DEPMOD  $(KERNEL_VERSION)
      cmd_depmod = $(DEPMOD) -b $@ $(KERNEL_VERSION)

kernel-version = $(objtree)/build/packages/kernel/linux/kernel-version
include $(kernel-version)

$(obj)/initrd: KERNEL_VERSION = $(VERSION)
$(obj)/initrd: %: mount-% $(packages) FORCE
	$(if $(wildcard $(obj)/initrd/lib/modules/$(KERNEL_VERSION)),$(call cmd,depmod))

quiet_cmd_initrd = CPIO    $@
      cmd_initrd = cd $< && find | cpio -H newc --quiet -o > $@

quiet_cmd_umount_ramdisk = UMOUNT  $<
      cmd_umount_ramdisk = umount $< && rmdir $<

$(obj)/initrd.img: $(obj)/initrd FORCE
	$(call cmd,initrd)
	$(call cmd,umount_ramdisk)

quiet_cmd_gzip = GZIP    $@
      cmd_gzip = gzip -c $< > $@

$(obj)/initrd.gz: $(obj)/initrd.img
	$(call cmd,gzip)

m4-defines = -DVERSION="$(VERSION)"

ifneq ($(KERNEL_DTB),)
m4-defines += -DUIMAGE_ENABLE_DTB
endif

quiet_cmd_gen_multi = GEN     $@
      cmd_gen_multi = m4 -P $(m4-defines) $< > $@

$(obj)/multi.its: $(master-platform)/multi.its.m4 $(kernel-version)
	$(call cmd,gen_multi)

MKIMAGE ?= $(objtree)/build-tools/bin/mkimage

quiet_cmd_uimage = UIMAGE  $@
      cmd_uimage = $(MKIMAGE) -f $< $@ $(if $(Q),> /dev/null 2>&1,)

$(obj)/uImage: $(obj)/multi.its $(obj)/initrd.gz
	$(call cmd,uimage)

all: $(targets-y)
	@:

PHONY += FORCE
FORCE: ;

.PHONY: $(PHONY)
