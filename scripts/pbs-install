#!/bin/sh

quiet=no

log()
{
	if test "x$quiet" = "xno"; then
		echo "$@"
	fi
}

for arg in $@; do
	if [ "x$prev" != "x" ]; then
		if [ "x${arg#-}" = "x$arg" ]; then
			eval $prev=$arg
			prev=
			shift; continue
		else
			echo "WARNING: missing argument for parameter: $opt"
		fi
	fi

	opt=$arg

	case $arg in
		-q | --quiet)
			quiet=yes
			shift
			;;

		-t | --target)
			prev=target
			shift
			;;

		-v | --version)
			prev=version
			shift
			;;

		-s | --source)
			prev=srcdir
			shift
			;;

		-b | --binary)
			prev=binary
			shift
			;;

		*)
			packages="$@"
			break
			;;
	esac
done

if [ "x$prev" != "x" ]; then
	echo "WARNING: missing argument for parameter: $opt"
fi

if [ "x$target" = "x" ]; then
	echo "ERROR: no target configuration specified - try using -t TARGET"
	exit 1
fi

if [ "x$version" = "x" ]; then
	echo "ERROR: no version specified - try using -v VERSION"
	exit 1
fi

if [ "x$srcdir" = "x" ]; then
	echo "ERROR: no source directory specified - try using -s PATH"
	exit 1
fi

if [ "x$binary" = "x" ]; then
	echo "ERROR: no binary directory specified - try using -b PATH"
	exit 1
fi

if [ "x$packages" = "x" ]; then
	echo "ERROR: no package definition specified"
	exit 1
fi

dstdir="${binary}/install"

for package in $packages; do
	package="${package%.install}"
	subdir="${package##*/}"

	if [ -d "$dstdir/$subdir" ]; then
		log -n "Removing directory: $dstdir/$subdir ... "
		rm -rf "$dstdir/$subdir"
		log "done"
	fi

	log "Installing $subdir "
	cat "$package.install" | (
		while read line; do
			[ "x${line#\#}" = "x$line" ] || continue

			src=`echo "$line" | awk '{ print $1 }'`
			dst=`echo "$line" | awk '{ print $2 }'`

			if [ "x$dst" = "x" ]; then
				dst=`dirname "$src"`
			fi

			[ "x${src#/}" = "x$src" ] && src="/$src"
			[ "x${dst#/}" = "x$dst" ] && dst="/$dst"

			# Skip shell paterns expanding to nothing
			if echo "${srcdir}${src}" | grep -qF -e '*' -e '?' && \
			   [ "x$(echo ${srcdir}${src})" = "x${srcdir}${src}" ] ; then
				echo "  skipping empty install patern: ${src}"
				continue
			fi

			log "  installing: ${src}"
			mkdir -p "${dstdir}/${subdir}${dst}"
			cp -dpR ${srcdir}${src} "${dstdir}/${subdir}${dst}"
		done
	)

	debian="${dstdir}/${subdir}/DEBIAN"
	scripts="${0%/*}"

	mkdir -p "${debian}/hooks"

	if [ -f "${package}.binary" ]; then
		cp "${package}.binary" "${debian}/hooks/binary"
		chmod 755 "${debian}/hooks/binary"
	fi

	if [ -f "${package}.control" ]; then
		"${scripts}/opkg-gencontrol" -t $target -v $version \
			"${package}.control" > "${debian}/control"
	else
		# generate a dummy control file
		echo "Package: ${subdir}" > "${debian}/control"
		echo "Version: ${version}" >> "${debian}/control"
		echo "Architecture: ${target}" >> "${debian}/control"
	fi
done
