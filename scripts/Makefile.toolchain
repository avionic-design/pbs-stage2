src := $(obj)

PHONY := all
all:

include scripts/Kbuild.include
include scripts/Makefile.lib

kbuild-dir := $(if $(filter /%,$(src)),$(src),$(srctree)/$(src))
kbuild-file := $(if $(wildcard $(kbuild-dir)/Kbuild),$(kbuild-dir)/Kbuild,$(kbuild-dir)/Makefile)
include $(kbuild-file)

ROOTFS = $(CURDIR)
export ROOTFS

mode ?= build

packages := $(addprefix $(mode)-,$(obj-y))

ifeq ($(mode),clean)
  packages := clean
endif

PHONY += $(packages)

$(addprefix list-,$(obj-y)): list-%:
	$(Q)$(MAKE) $(package)=$* list

$(addprefix build-,$(obj-y)): build-%:
	$(Q)$(MAKE) $(package)=$*

$(addprefix uscan-,$(obj-y)): uscan-%:
	$(Q)$(MAKE) $(uscan)=$*

clean-y	:= toolchain/
clean-y	+= usr/
clean-y	+= kernel-release
clean-y	+= kernel-version

clean-dirs	:= $(addprefix $(CURDIR)/,$(filter %/,$(clean-y)))
clean-files	:= $(addprefix $(CURDIR)/,$(filter-out %/,$(clean-y)))

quiet_cmd_cleandir = CLEAN   $@
      cmd_cleandir = rm -rf $@

quiet_cmd_clean = CLEAN   $@
      cmd_clean = rm -f $@

PHONY += $(clean-dirs)
$(clean-dirs):
	$(call cmd,cleandir)

PHONY += $(clean-files)
$(clean-files):
	$(call cmd,clean)

PHONY += clean
clean: $(clean-dirs) $(clean-files)
	@:

all: $(packages)

PHONY += FORCE
FORCE: ;

.PHONY: $(PHONY)
